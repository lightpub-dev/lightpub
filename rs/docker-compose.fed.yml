version: "3"

services:
  nginx:
    restart: unless-stopped
    image: nginx:latest
    volumes:
      - ./test_instances/nginx/conf.d:/etc/nginx/conf.d
      - ./test_instances/ssl:/etc/nginx/certs
    ports:
      - 80:80
      - 443:443
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      external_network:
      internal_network:
        aliases:
          - mastodon.tinax.local
          - misskey.tinax.local
          - lightpub.tinax.local
          - pleroma.tinax.local

  mastodon_web:
    image: tootsuite/mastodon:v4.2.7
    env_file: ./test_instances/mastodon/.env.production
    command: /config/start.sh
    networks:
      - internal_network
      - external_network
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1']
    ports:
      - 3000:3000
    depends_on:
      mastodon_db:
        condition: service_healthy
      mastodon_redis:
        condition: service_healthy
      mail:
        condition: service_started
    volumes:
      - mastodon_system:/mastodon/public/system
      - ./test_instances/mastodon:/config
      - ./test_instances/ssl:/ssl

  # mastodon_streaming:
  #   image: tootsuite/mastodon:v4.2.7
  #   env_file: ./test_instances/mastodon/.env.production
  #   command: node ./streaming
  #   networks:
  #     - external_network
  #     - internal_network
  #   healthcheck:
  #     # prettier-ignore
  #     test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1']
  #   ports:
  #     - "127.0.0.1:4000:4000"
  #   depends_on:
  #     mastodon_db:
  #       condition: service_healthy
  #     mastodon_redis:
  #       condition: service_healthy

  mastodon_sidekiq:
    image: tootsuite/mastodon:v4.2.7
    env_file: ./test_instances/mastodon/.env.production
    command: bundle exec sidekiq
    depends_on:
      mastodon_db:
        condition: service_healthy
      mastodon_redis:
        condition: service_healthy
    networks:
      - external_network
      - internal_network
    volumes:
      - mastodon_system:/mastodon/public/system
      - ./test_instances/ssl:/ssl
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep '[s]idekiq\ 6' || false"]

  mastodon_db:
    restart: unless-stopped
    image: postgres:14-alpine
    shm_size: 256mb
    networks:
      - internal_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "mastodon", "-d", "mastodon_production"]
    volumes:
      - mastodon_db_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: mastodon
      POSTGRES_DB: mastodon_production
      POSTGRES_PASSWORD: mastodon_production

  mastodon_redis:
    restart: unless-stopped
    image: redis:7-alpine
    networks:
      - internal_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - mastodon_redis_data:/data

  mail:
    image: mailhog/mailhog
    ports:
      - 8025:8025

  misskey_web:
    image: misskey/misskey:2024.3.1
    restart: unless-stopped
    links:
      - misskey_db
      - misskey_redis
    #     - mcaptcha
    #     - meilisearch
    depends_on:
      misskey_db:
        condition: service_healthy
      misskey_redis:
        condition: service_healthy
    ports:
      - "5000:5000"
    networks:
      - internal_network
      - external_network
    volumes:
      - misskey_files:/misskey/files
      - ./test_instances/misskey:/misskey/.config:ro
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: 0
      NODE_ENV: development

  misskey_redis:
    restart: unless-stopped
    image: redis:7-alpine
    networks:
      - internal_network
    expose:
      - 6380
    volumes:
      - misskey_redis_data:/data
    healthcheck:
      test: "redis-cli -p 6380 ping"
      interval: 5s
      retries: 20
    command: --port 6380

  misskey_db:
    restart: unless-stopped
    image: postgres:15-alpine
    networks:
      - internal_network
    env_file:
      - ./test_instances/misskey/docker.env
    environment:
      PGPORT: 5433
    expose:
      - 5433
    ports:
      - 5433:5433
    volumes:
      - misskey_db_data:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
      interval: 5s
      retries: 20
    command: -p 5433

volumes:
  mastodon_db_data:
  mastodon_redis_data:
  mastodon_system:
  misskey_files:
  misskey_db_data:
  misskey_redis_data:
  lightpub_db_data:

networks:
  internal_network:
    internal: true
  external_network:
