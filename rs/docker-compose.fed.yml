version: "3"

services:
  nginx:
    image: nginx:latest
    volumes:
      - ./test_instances/nginx/conf.d:/etc/nginx/conf.d
      - ./test_instances/ssl:/etc/nginx/certs
    ports:
      - 80:80
      - 443:443
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      external_network:
      internal_network:
        aliases:
          - mastodon.tinax.local
          - misskey.tinax.local
          - lightpub.tinax.local
          - pleroma.tinax.local

  mastodon_web:
    image: tootsuite/mastodon:v4.2.7
    env_file: ./test_instances/mastodon/.env.production
    command: /config/start.sh
    networks:
      - internal_network
      - external_network
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1']
    ports:
      - 3000:3000
    depends_on:
      - mastodon_db
      - mastodon_redis
    volumes:
      - mastodon_system:/mastodon/public/system
      - ./test_instances/mastodon:/config
    profiles:
      - mastodon

  mastodon_streaming:
    image: tootsuite/mastodon:v4.2.7
    env_file: ./test_instances/mastodon/.env.production
    command: node ./streaming
    networks:
      - external_network
      - internal_network
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1']
    ports:
      - "127.0.0.1:4000:4000"
    depends_on:
      - mastodon_db
      - mastodon_redis
    profiles:
      - mastodon

  mastodon_sidekiq:
    image: tootsuite/mastodon:v4.2.7
    env_file: ./test_instances/mastodon/.env.production
    command: bundle exec sidekiq
    depends_on:
      mastodon_db:
        condition: service_healthy
      mastodon_redis:
        condition: service_healthy
    networks:
      - external_network
      - internal_network
    volumes:
      - mastodon_system:/mastodon/public/system
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep '[s]idekiq\ 6' || false"]
    profiles:
      - mastodon

  mastodon_db:
    restart: unless-stopped
    image: postgres:14-alpine
    shm_size: 256mb
    networks:
      - internal_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "mastodon"]
    volumes:
      - mastodon_db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: mastodon
      POSTGRES_DB: mastodon_production
      POSTGRES_PASSWORD: mastodon_production
    profiles:
      - mastodon

  mastodon_redis:
    restart: unless-stopped
    image: redis:7-alpine
    networks:
      - internal_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - mastodon_redis_data:/data
    profiles:
      - mastodon

  mail:
    image: mailhog/mailhog
    ports:
      - 8025:8025
    profiles:
      - mastodon

volumes:
  mastodon_db_data:
  mastodon_redis_data:
  mastodon_system:
  lightpub_db_data:

networks:
  internal_network:
    internal: true
  external_network:
