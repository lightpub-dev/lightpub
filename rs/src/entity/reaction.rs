//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "reaction")]
pub struct Model {
    #[sea_orm(
        primary_key,
        auto_increment = false,
        column_type = "Binary(BlobSize::Blob(Some(16)))"
    )]
    pub id: Vec<u8>,
    #[sea_orm(unique)]
    pub name: String,
    #[sea_orm(column_type = "Binary(BlobSize::Blob(Some(16)))")]
    pub image_id: Vec<u8>,
    pub registered_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::post_reaction::Entity")]
    PostReaction,
}

impl Related<super::post_reaction::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PostReaction.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
